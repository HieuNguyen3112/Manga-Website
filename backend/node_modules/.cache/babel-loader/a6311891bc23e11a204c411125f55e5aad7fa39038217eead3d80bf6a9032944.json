{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nconst refreshToken = async () => {\n  try {\n    const res = await axios.post(\"/v1/auth/refresh\", {\n      withCredentials: true\n    });\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const createAxios = (user, dispatch, stateSuccess) => {\n  const newInstance = axios.create();\n  newInstance.interceptors.request.use(async config => {\n    let date = new Date();\n    const decodedToken = jwt_decode(user === null || user === void 0 ? void 0 : user.accessToken);\n    if (decodedToken.exp < date.getTime() / 1000) {\n      const data = await refreshToken();\n      const refreshUser = {\n        ...user,\n        accessToken: data.accessToken\n      };\n      dispatch(stateSuccess(refreshUser));\n      config.headers[\"token\"] = \"Bearer \" + data.accessToken;\n    }\n    return config;\n  }, err => {\n    return Promise.reject(err);\n  });\n  return newInstance;\n};","map":{"version":3,"names":["axios","jwt_decode","refreshToken","res","post","withCredentials","data","err","console","log","createAxios","user","dispatch","stateSuccess","newInstance","create","interceptors","request","use","config","date","Date","decodedToken","accessToken","exp","getTime","refreshUser","headers","Promise","reject"],"sources":["C:/Users/WINDOWS/source/repos/CNPM/src/createInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const res = await axios.post(\"/v1/auth/refresh\", {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const createAxios = (user, dispatch, stateSuccess) => {\r\n  const newInstance = axios.create();\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      let date = new Date();\r\n      const decodedToken = jwt_decode(user?.accessToken);\r\n      if (decodedToken.exp < date.getTime() / 1000) {\r\n        const data = await refreshToken();\r\n        const refreshUser = {\r\n          ...user,\r\n          accessToken: data.accessToken,\r\n        };\r\n        dispatch(stateSuccess(refreshUser));\r\n        config.headers[\"token\"] = \"Bearer \" + data.accessToken;\r\n      }\r\n      return config;\r\n    },\r\n    (err) => {\r\n      return Promise.reject(err);\r\n    }\r\n  );\r\n  return newInstance;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAEnC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,kBAAkB,EAAE;MAC/CC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOF,GAAG,CAACG,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,KAAK;EAC3D,MAAMC,WAAW,GAAGd,KAAK,CAACe,MAAM,CAAC,CAAC;EAClCD,WAAW,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,MAAOC,MAAM,IAAK;IAChB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACrB,MAAMC,YAAY,GAAGrB,UAAU,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,WAAW,CAAC;IAClD,IAAID,YAAY,CAACE,GAAG,GAAGJ,IAAI,CAACK,OAAO,CAAC,CAAC,GAAG,IAAI,EAAE;MAC5C,MAAMnB,IAAI,GAAG,MAAMJ,YAAY,CAAC,CAAC;MACjC,MAAMwB,WAAW,GAAG;QAClB,GAAGf,IAAI;QACPY,WAAW,EAAEjB,IAAI,CAACiB;MACpB,CAAC;MACDX,QAAQ,CAACC,YAAY,CAACa,WAAW,CAAC,CAAC;MACnCP,MAAM,CAACQ,OAAO,CAAC,OAAO,CAAC,GAAG,SAAS,GAAGrB,IAAI,CAACiB,WAAW;IACxD;IACA,OAAOJ,MAAM;EACf,CAAC,EACAZ,GAAG,IAAK;IACP,OAAOqB,OAAO,CAACC,MAAM,CAACtB,GAAG,CAAC;EAC5B,CACF,CAAC;EACD,OAAOO,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}